create table "public"."oll_status" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "oll_name" text not null,
    "status" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone
);


CREATE UNIQUE INDEX oll_status_pkey ON public.oll_status USING btree (id);

CREATE UNIQUE INDEX oll_status_user_id_status_key ON public.oll_status USING btree (user_id, oll_name);

alter table "public"."oll_status" add constraint "oll_status_pkey" PRIMARY KEY using index "oll_status_pkey";

alter table "public"."oll_status" add constraint "oll_status_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id) not valid;

alter table "public"."oll_status" validate constraint "oll_status_user_id_fkey";

alter table "public"."oll_status" add constraint "oll_status_user_id_status_key" UNIQUE using index "oll_status_user_id_status_key";

create policy "Users can insert their own OLL status"
on "public"."oll_status"
as permissive
for insert
to public
with check ((auth.uid() = user_id));


create policy "Users can update their own OLL status"
on "public"."oll_status"
as permissive
for update
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));


create policy "Users can view their own OLL statuses"
on "public"."oll_status"
as permissive
for select
to public
using ((auth.uid() = user_id));



